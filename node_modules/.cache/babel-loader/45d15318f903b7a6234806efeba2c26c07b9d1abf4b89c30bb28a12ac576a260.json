{"ast":null,"code":"var _jsxFileName = \"/Users/nathan.sabourdy/Epitech/EIP/Sprint1/Front_WEB/TidalyReact/src/views/Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport logo from '../assets/LogoTidaly.png';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst instance = axios.create({\n  baseURL: 'http://localhost:3333/api/v1',\n  headers: {\n    'Access-Control-Allow-Origin': '*'\n  }\n});\nexport const Register = props => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPass] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [formValid, setFormValid] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [errorMessageDisplay, setErrorMessageDisplay] = useState(\"\");\n  const [displayErrorMessage, setDisplayErrorMessage] = useState(\"\");\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (formValid == true) {\n      alert(\"ooooo\");\n      setDisplayErrorMessage(false);\n      if (password == confirmPassword) {\n        try {\n          const response = await instance.post(\"/register\", {\n            email: email,\n            password: password\n          });\n          console.log(response);\n          window.location.href = \"http://localhost:3000/login\";\n        } catch (error) {\n          setErrorMessage(error.response.data.message);\n        }\n      } else {\n        setErrorMessageDisplay(\"Veuillez saisir le même mot de passe\");\n      }\n    } else {\n      setDisplayErrorMessage(true);\n      setErrorMessageDisplay(\"Tous les champs ne sont pas remplies\");\n    }\n  };\n\n  // const checkPasswordIsSame = () => {\n  //     if (password === checkPasswordSame) {\n  //         setSamePassword(true);\n  //     }\n  // }\n\n  const checkFormValidity = () => {\n    if (email && password && confirmPassword) {\n      setFormValid(true);\n    } else {\n      setFormValid(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle-Container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circleRegister\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: logo,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Page d'inscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), displayErrorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMessageDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \" E-mail \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"BtnRegisterConnexion\",\n        value: email,\n        onChange: e => {\n          setEmail(e.target.value);\n          checkFormValidity();\n        },\n        type: \"email\",\n        placeholder: \"votremail@gmail.com\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \" Mot de passe \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"BtnRegisterConnexion\",\n        value: password,\n        onChange: e => {\n          setPass(e.target.value);\n          checkFormValidity();\n        },\n        type: \"password\",\n        placeholder: \"************\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"passwordConfirm\",\n        children: \" Confirmer le mot de passe \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputClass\",\n        value: confirmPassword,\n        onChange: e => {\n          setConfirmPassword(e.target.value);\n          checkFormValidity();\n        },\n        type: \"password\",\n        placeholder: \"************\",\n        id: \"passwordConfirm\",\n        name: \"passwordConfirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-submit\",\n        type: \"submit\",\n        children: \"S'inscrire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"link-button\",\n        children: \"J'ai d\\xE9j\\xE0 un compte !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"bh2UZCIvH6Fd8IdpoBNSBDW3COo=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Link","logo","axios","jsxDEV","_jsxDEV","instance","create","baseURL","headers","Register","props","_s","email","setEmail","password","setPass","confirmPassword","setConfirmPassword","formValid","setFormValid","errorMessage","setErrorMessage","errorMessageDisplay","setErrorMessageDisplay","displayErrorMessage","setDisplayErrorMessage","handleSubmit","event","preventDefault","alert","response","post","console","log","window","location","href","error","data","message","checkFormValidity","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","onChange","e","target","type","placeholder","id","name","to","_c","$RefreshReg$"],"sources":["/Users/nathan.sabourdy/Epitech/EIP/Sprint1/Front_WEB/TidalyReact/src/views/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport logo from '../assets/LogoTidaly.png';\nimport axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:3333/api/v1',\n    headers: { 'Access-Control-Allow-Origin': '*' }\n  });\n\nexport const Register = (props) => {\n    const [email, setEmail] = useState('')\n    const [password,  setPass] = useState('')\n    const [confirmPassword,  setConfirmPassword] = useState('')\n    const [formValid, setFormValid] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [errorMessageDisplay, setErrorMessageDisplay] = useState(\"\");\n    const [displayErrorMessage, setDisplayErrorMessage] = useState(\"\");\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (formValid == true) {\n            alert(\"ooooo\")\n            setDisplayErrorMessage(false)\n            if (password == confirmPassword) {\n                try {\n                const response = await instance.post(\"/register\", {\n                    email: email,\n                    password: password,\n                });\n                console.log(response);\n                window.location.href = \"http://localhost:3000/login\";\n                } catch (error) {\n                setErrorMessage(error.response.data.message);\n                }\n            } else {\n                setErrorMessageDisplay(\"Veuillez saisir le même mot de passe\")\n            }\n        }\n        else {\n            setDisplayErrorMessage(true)\n            setErrorMessageDisplay(\"Tous les champs ne sont pas remplies\")\n        }\n\n    };\n\n    // const checkPasswordIsSame = () => {\n    //     if (password === checkPasswordSame) {\n    //         setSamePassword(true);\n    //     }\n    // }\n\n    const checkFormValidity = () => {\n        if (email && password && confirmPassword) {\n          setFormValid(true);\n        } else {\n          setFormValid(false);\n        }\n      };\n\n    return (\n        <div className=\"auth-form-container\">\n\n            <div className=\"circle-Container\">\n                <div className=\"circleRegister\">\n                    <img className=\"logo\" src={logo} alt=\"Logo\"></img>\n                </div>\n            </div>\n\n            <h2>Page d'inscription</h2>\n\n            {displayErrorMessage && (\n            <div>{errorMessageDisplay}</div>\n            )}\n\n            <form className=\"register-form\" onSubmit={handleSubmit}>\n\n                <label htmlFor=\"email\"> E-mail </label>\n                <input className =\"BtnRegisterConnexion\" value={email} onChange={(e) => {setEmail(e.target.value); checkFormValidity();}} type=\"email\" placeholder=\"votremail@gmail.com\" id=\"email\" name=\"email\" />\n\n                <label htmlFor=\"password\"> Mot de passe </label>\n                <input className =\"BtnRegisterConnexion\" value={password} onChange={(e) => {setPass(e.target.value); checkFormValidity();}} type=\"password\" placeholder=\"************\" id=\"password\" name=\"password\" />\n\n                <label htmlFor=\"passwordConfirm\"> Confirmer le mot de passe </label>\n                <input className =\"inputClass\" value={confirmPassword} onChange={(e) => {setConfirmPassword(e.target.value); checkFormValidity();}} type=\"password\" placeholder=\"************\" id=\"passwordConfirm\" name=\"passwordConfirm\" />\n\n                <button className=\"btn-submit\" type=\"submit\">S'inscrire</button>\n            </form>\n\n            <Link to=\"/\">\n                <button className=\"link-button\" >J'ai déjà un compte !</button>\n            </Link>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC1BC,OAAO,EAAE,8BAA8B;EACvCC,OAAO,EAAE;IAAE,6BAA6B,EAAE;EAAI;AAChD,CAAC,CAAC;AAEJ,OAAO,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,QAAQ,EAAGC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACqB,eAAe,EAAGC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC3D,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC2B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC6B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAElE,MAAM+B,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAIV,SAAS,IAAI,IAAI,EAAE;MACnBW,KAAK,CAAC,OAAO,CAAC;MACdJ,sBAAsB,CAAC,KAAK,CAAC;MAC7B,IAAIX,QAAQ,IAAIE,eAAe,EAAE;QAC7B,IAAI;UACJ,MAAMc,QAAQ,GAAG,MAAMzB,QAAQ,CAAC0B,IAAI,CAAC,WAAW,EAAE;YAC9CnB,KAAK,EAAEA,KAAK;YACZE,QAAQ,EAAEA;UACd,CAAC,CAAC;UACFkB,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;UACrBI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,6BAA6B;QACpD,CAAC,CAAC,OAAOC,KAAK,EAAE;UAChBhB,eAAe,CAACgB,KAAK,CAACP,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC;QAC5C;MACJ,CAAC,MAAM;QACHhB,sBAAsB,CAAC,sCAAsC,CAAC;MAClE;IACJ,CAAC,MACI;MACDE,sBAAsB,CAAC,IAAI,CAAC;MAC5BF,sBAAsB,CAAC,sCAAsC,CAAC;IAClE;EAEJ,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA,MAAMiB,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAI5B,KAAK,IAAIE,QAAQ,IAAIE,eAAe,EAAE;MACxCG,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLA,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEH,oBACIf,OAAA;IAAKqC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAEhCtC,OAAA;MAAKqC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC7BtC,OAAA;QAAKqC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC3BtC,OAAA;UAAKqC,SAAS,EAAC,MAAM;UAACE,GAAG,EAAE1C,IAAK;UAAC2C,GAAG,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAO;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAChD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eAEN5C,OAAA;MAAAsC,QAAA,EAAI;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAE1BxB,mBAAmB,iBACpBpB,OAAA;MAAAsC,QAAA,EAAMpB;IAAmB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxB,eAED5C,OAAA;MAAMqC,SAAS,EAAC,eAAe;MAACQ,QAAQ,EAAEvB,YAAa;MAAAgB,QAAA,gBAEnDtC,OAAA;QAAO8C,OAAO,EAAC,OAAO;QAAAR,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvC5C,OAAA;QAAOqC,SAAS,EAAE,sBAAsB;QAACU,KAAK,EAAEvC,KAAM;QAACwC,QAAQ,EAAGC,CAAC,IAAK;UAACxC,QAAQ,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAAEX,iBAAiB,EAAE;QAAC,CAAE;QAACe,IAAI,EAAC,OAAO;QAACC,WAAW,EAAC,qBAAqB;QAACC,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC;MAAO;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAEnM5C,OAAA;QAAO8C,OAAO,EAAC,UAAU;QAAAR,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAChD5C,OAAA;QAAOqC,SAAS,EAAE,sBAAsB;QAACU,KAAK,EAAErC,QAAS;QAACsC,QAAQ,EAAGC,CAAC,IAAK;UAACtC,OAAO,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAAEX,iBAAiB,EAAE;QAAC,CAAE;QAACe,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,cAAc;QAACC,EAAE,EAAC,UAAU;QAACC,IAAI,EAAC;MAAU;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAEvM5C,OAAA;QAAO8C,OAAO,EAAC,iBAAiB;QAAAR,QAAA,EAAC;MAA2B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACpE5C,OAAA;QAAOqC,SAAS,EAAE,YAAY;QAACU,KAAK,EAAEnC,eAAgB;QAACoC,QAAQ,EAAGC,CAAC,IAAK;UAACpC,kBAAkB,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAAEX,iBAAiB,EAAE;QAAC,CAAE;QAACe,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,cAAc;QAACC,EAAE,EAAC,iBAAiB;QAACC,IAAI,EAAC;MAAiB;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAE7N5C,OAAA;QAAQqC,SAAS,EAAC,YAAY;QAACc,IAAI,EAAC,QAAQ;QAAAb,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7D,eAEP5C,OAAA,CAACJ,IAAI;MAAC2D,EAAE,EAAC,GAAG;MAAAjB,QAAA,eACRtC,OAAA;QAAQqC,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAE;MAAqB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEd,CAAC;AAAArC,EAAA,CApFYF,QAAQ;AAAAmD,EAAA,GAARnD,QAAQ;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}