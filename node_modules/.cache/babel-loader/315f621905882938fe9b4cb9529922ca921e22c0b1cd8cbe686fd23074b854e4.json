{"ast":null,"code":"var _jsxFileName = \"/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/views/SensorDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SensorDetails() {\n  _s();\n  const [squares, setSquares] = useState([]);\n  const getSquareColor = type => {\n    if (type === \"Toilette\") {\n      return \"red\";\n    } else if (type === \"Douche\") {\n      return \"yellow\";\n    } else if (type === \"Robinet\") {\n      return \"blue\";\n    } else {\n      return \"#ccc\";\n    }\n  };\n  const getRandomValue = () => {\n    const value = Math.floor(Math.random() * 1000) / 10;\n    return `${value} L`;\n  };\n  function renderCircle(value) {\n    const percentage = Math.floor(value / 100 * 100);\n    const radius = 35;\n    const circumference = 2 * Math.PI * radius;\n    const offset = circumference - percentage / 100 * circumference;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: radius * 2,\n      height: radius * 2,\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: radius,\n        cy: radius,\n        r: radius - 5,\n        fill: \"none\",\n        stroke: \"#ccc\",\n        strokeWidth: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: radius,\n        cy: radius,\n        r: radius - 5,\n        fill: \"none\",\n        stroke: \"green\",\n        strokeWidth: \"5\",\n        strokeDasharray: `${percentage / 100 * circumference} ${circumference}`,\n        strokeDashoffset: `${offset}`,\n        strokeLinecap: \"round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"50%\",\n        y: \"50%\",\n        dominantBaseline: \"middle\",\n        textAnchor: \"middle\",\n        fontSize: \"18px\",\n        children: [percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n  const addSquare = () => {\n    const type = prompt(\"Choose a type: Toilette, Douche or Robinet\");\n    const percentage = Math.floor(Math.random() * 100);\n    const random = Math.floor(Math.random() * 100);\n    setSquares([...squares, {\n      type: type,\n      percentage: percentage,\n      color: getSquareColor(type),\n      value: getRandomValue(),\n      random: random\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: \"50%\",\n        bottom: \"10px\",\n        transform: \"translate(-50%)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addSquare,\n        children: \"Ajouter un capteur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"flex-start\",\n        marginTop: \"50px\"\n      },\n      children: squares.map((square, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"150px\",\n          height: \"200px\",\n          backgroundColor: square.color,\n          margin: \"10px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          borderRadius: \"10px\"\n        },\n        children: [renderCircle(square.percentage), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: square.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"12px\",\n            marginTop: \"5px\"\n          },\n          children: \"Consommation actuelle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"20px\",\n            fontWeight: \"bold\"\n          },\n          children: square.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            width: \"80%\",\n            margin: \"10px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"12px\",\n            marginTop: \"5px\"\n          },\n          children: \"Consommation moyenne\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"16px\",\n            fontWeight: \"bold\"\n          },\n          children: square.average\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"16px\",\n            fontWeight: \"bold\"\n          },\n          children: square.random\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(SensorDetails, \"NEIoD6bRl4K14ROd8WisLnBpVR4=\");\n_c = SensorDetails;\nexport default SensorDetails;\nvar _c;\n$RefreshReg$(_c, \"SensorDetails\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Link","jsxDEV","_jsxDEV","SensorDetails","_s","squares","setSquares","getSquareColor","type","getRandomValue","value","Math","floor","random","renderCircle","percentage","radius","circumference","PI","offset","width","height","children","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","strokeDashoffset","strokeLinecap","x","y","dominantBaseline","textAnchor","fontSize","addSquare","prompt","color","className","style","position","left","bottom","transform","onClick","display","flexDirection","flexWrap","justifyContent","marginTop","map","square","index","backgroundColor","margin","alignItems","borderRadius","fontWeight","average","_c","$RefreshReg$"],"sources":["/Users/killiandesserich/Developer/Tidaly/TidalyReact/src/views/SensorDetails.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nfunction SensorDetails() {\n  const [squares, setSquares] = useState([]);\n\n  const getSquareColor = (type) => {\n    if (type === \"Toilette\") {\n      return \"red\";\n    } else if (type === \"Douche\") {\n      return \"yellow\";\n    } else if (type === \"Robinet\") {\n      return \"blue\";\n    } else {\n      return \"#ccc\";\n    }\n  };\n\n  const getRandomValue = () => {\n    const value = Math.floor(Math.random() * 1000) / 10;\n    return `${value} L`;\n  };\n\n  function renderCircle(value) {\n    const percentage = Math.floor((value / 100) * 100);\n    const radius = 35;\n    const circumference = 2 * Math.PI * radius;\n    const offset = circumference - (percentage / 100) * circumference;\n\n    return (\n      <svg width={radius * 2} height={radius * 2}>\n        <circle cx={radius} cy={radius} r={radius - 5} fill=\"none\" stroke=\"#ccc\" strokeWidth=\"5\" />\n        <circle\n          cx={radius}\n          cy={radius}\n          r={radius - 5}\n          fill=\"none\"\n          stroke=\"green\"\n          strokeWidth=\"5\"\n          strokeDasharray={`${percentage / 100 * circumference} ${circumference}`}\n          strokeDashoffset={`${offset}`}\n          strokeLinecap=\"round\"\n        />\n        <text x=\"50%\" y=\"50%\" dominantBaseline=\"middle\" textAnchor=\"middle\" fontSize=\"18px\">\n          {percentage}%\n        </text>\n      </svg>\n    );\n  }\n\n\n  const addSquare = () => {\n    const type = prompt(\"Choose a type: Toilette, Douche or Robinet\");\n    const percentage = Math.floor(Math.random() * 100);\n    const random = Math.floor(Math.random() * 100);\n    setSquares([...squares, { type: type, percentage: percentage, color: getSquareColor(type), value: getRandomValue(), random: random }]);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <div style={{ position: \"absolute\", left: \"50%\", bottom: \"10px\", transform: \"translate(-50%)\" }}>\n        <button onClick={addSquare}>Ajouter un capteur</button>\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", justifyContent: \"flex-start\", marginTop: \"50px\" }}>\n        {squares.map((square, index) => (\n          <div key={index} style={{ width: \"150px\", height: \"200px\", backgroundColor: square.color, margin: \"10px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\", borderRadius: \"10px\" }}>\n            {renderCircle(square.percentage)}\n            <span>{square.type}</span>\n            <span style={{ fontSize: \"12px\", marginTop: \"5px\" }}>Consommation actuelle</span>\n            <span style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>{square.value}</span>\n            <hr style={{ width: \"80%\", margin: \"10px 0\" }} />\n            <span style={{ fontSize: \"12px\", marginTop: \"5px\" }}>Consommation moyenne</span>\n            <span style={{ fontSize: \"16px\", fontWeight: \"bold\" }}>{square.average}</span>\n            <span style={{ fontSize: \"16px\", fontWeight: \"bold\" }}>{square.random}</span>\n\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SensorDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}