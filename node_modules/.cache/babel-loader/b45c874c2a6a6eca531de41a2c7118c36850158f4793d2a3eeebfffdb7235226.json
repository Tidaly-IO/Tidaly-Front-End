{"ast":null,"code":"var _jsxFileName = \"/Users/nathan.sabourdy/Epitech/EIP/Sprint1/Front_WEB/TidalyReact/src/views/Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport logo from '../assets/LogoTidaly.png';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = props => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPass] = useState('');\n  // const [name,  setName] = useState('')\n  const [formValid, setFormValid] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // try {\n    //     const response = await instance.post(\"/register\", {\n    //       name: name,\n    //       email: email,\n    //       password: password,\n    //     });\n    //     dispatch(setCurrentUser(response.data));\n    //     console.log(response);\n    //     setRegisterSuccess(true);\n    //     window.location.href = \"http://localhost:3000/login\";\n    //   } catch (error) {\n    //     setErrorMessage(error.response.data.message);\n    //   }\n  };\n\n  const checkFormValidity = () => {\n    if (name && email && pass) {\n      setFormValid(true);\n    } else {\n      setFormValid(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle-Container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circleRegister\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: logo,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Page d'inscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \" Nom de l'utilisateur \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"BtnRegisterConnexion\",\n        value: name,\n        onChange: e => {\n          setName(e.target.value);\n          checkFormValidity();\n        },\n        placeholder: \"Exemple:Lucas...\",\n        id: \"name\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \" E-mail \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"BtnRegisterConnexion\",\n        value: email,\n        onChange: e => {\n          setEmail(e.target.value);\n          checkFormValidity();\n        },\n        type: \"email\",\n        placeholder: \"votremail@gmail.com\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \" Mot de passe \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"BtnRegisterConnexion\",\n        value: password,\n        onChange: e => {\n          setPass(e.target.value);\n          checkFormValidity();\n        },\n        type: \"password\",\n        placeholder: \"************\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-submit\",\n        disabled: !formValid,\n        type: \"submit\",\n        children: \"S'inscrire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"link-button\",\n        children: \"J'ai d\\xE9j\\xE0 un compte !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"BsiuXh/KFuNL8RBLYClEDDRXmfM=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Link","logo","axios","jsxDEV","_jsxDEV","Register","props","_s","email","setEmail","password","setPass","formValid","setFormValid","handleSubmit","e","preventDefault","checkFormValidity","name","pass","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","onChange","setName","target","placeholder","id","type","disabled","to","_c","$RefreshReg$"],"sources":["/Users/nathan.sabourdy/Epitech/EIP/Sprint1/Front_WEB/TidalyReact/src/views/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport logo from '../assets/LogoTidaly.png';\nimport axios from 'axios';\n\nexport const Register = (props) => {\n    const [email, setEmail] = useState('')\n    const [password,  setPass] = useState('')\n    // const [name,  setName] = useState('')\n    const [formValid, setFormValid] = useState(false);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // try {\n        //     const response = await instance.post(\"/register\", {\n        //       name: name,\n        //       email: email,\n        //       password: password,\n        //     });\n        //     dispatch(setCurrentUser(response.data));\n        //     console.log(response);\n        //     setRegisterSuccess(true);\n        //     window.location.href = \"http://localhost:3000/login\";\n        //   } catch (error) {\n        //     setErrorMessage(error.response.data.message);\n        //   }\n    }\n\n    const checkFormValidity = () => {\n        if (name && email && pass) {\n          setFormValid(true);\n        } else {\n          setFormValid(false);\n        }\n      };\n\n    return (\n        <div className=\"auth-form-container\">\n\n            <div className=\"circle-Container\">\n                <div className=\"circleRegister\">\n                    <img className=\"logo\" src={logo} alt=\"Logo\"></img>\n                </div>\n            </div>\n\n            <h2>Page d'inscription</h2>\n            <form className=\"register-form\" onSubmit={handleSubmit}>\n                <label htmlFor=\"name\"> Nom de l'utilisateur </label>\n                <input className =\"BtnRegisterConnexion\" value={name} onChange={(e) => {setName(e.target.value); checkFormValidity();}} placeholder=\"Exemple:Lucas...\" id=\"name\" name=\"name\" />\n\n                <label htmlFor=\"email\"> E-mail </label>\n                <input className =\"BtnRegisterConnexion\" value={email} onChange={(e) => {setEmail(e.target.value); checkFormValidity();}} type=\"email\" placeholder=\"votremail@gmail.com\" id=\"email\" name=\"email\" />\n\n                <label htmlFor=\"password\"> Mot de passe </label>\n                <input className =\"BtnRegisterConnexion\" value={password} onChange={(e) => {setPass(e.target.value); checkFormValidity();}} type=\"password\" placeholder=\"************\" id=\"password\" name=\"password\" />\n\n                <button className=\"btn-submit\" disabled={!formValid} type=\"submit\">S'inscrire</button>\n            </form>\n\n            <Link to=\"/\">\n                <button className=\"link-button\" >J'ai déjà un compte !</button>\n            </Link>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}